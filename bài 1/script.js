// H√†m ch√≠nh x·ª≠ l√Ω vi·ªác l·∫•y v√† g·ª≠i d·ªØ li·ªáu
async function layVaGuiDuLieu() {
  try {
    // G·ª≠i GET ƒë·∫øn API ƒë·ªÉ l·∫•y danh s√°ch ng∆∞·ªùi d√πng
    const response = await fetch("https://jsonplaceholder.typicode.com/users");

    // Ki·ªÉm tra n·∫øu server ph·∫£n h·ªìi l·ªói
    console.log("üì¶ response.ok:", response.ok); // true ho·∫∑c false
    console.log("üì• M√£ tr·∫°ng th√°i:", response.status);

    if (!response.ok) {
      console.error("‚ùå L·ªói ph·∫£n h·ªìi t·ª´ server:", response.status);
      alert("Kh√¥ng th·ªÉ l·∫•y d·ªØ li·ªáu t·ª´ server. M√£ l·ªói: " + response.status);
      return;
    }

    const data = await response.json();
    console.log("‚úÖ D·ªØ li·ªáu nh·∫≠n ƒë∆∞·ª£c:", data);

    const listContainer = document.getElementById("user-list");
    listContainer.innerHTML = ""; // X√≥a d·ªØ li·ªáu c≈©

    // T·∫°o b·∫£ng ƒë·ªÉ hi·ªÉn th·ªã danh s√°ch ng∆∞·ªùi d√πng
    const table = document.createElement("table");
    //table.border = "1"; d√πng c≈©ng ƒë∆∞·ª£c nh∆∞ng k khuy·∫øn kh√≠ch
table.style.border = "1px solid black";
    table.style.borderCollapse = "collapse";
    table.style.width = "100%";
    table.style.textAlign = "left";

    // T·∫°o h√†ng ti√™u ƒë·ªÅ
    const headerRow = document.createElement("tr");
    ["STT", "H·ªç v√† t√™n", "Email"].forEach((text) => {
      const th = document.createElement("th");
      th.textContent = text;
      th.style.padding = "8px";
      headerRow.appendChild(th);
    });
    table.appendChild(headerRow);

    // T·∫°o c√°c h√†ng d·ªØ li·ªáu ng∆∞·ªùi d√πng
    data.forEach((user, index) => {
      const row = document.createElement("tr");

      const sttCell = document.createElement("td");
      sttCell.textContent = index + 1;
      sttCell.style.padding = "6px";

      const nameCell = document.createElement("td");
      nameCell.textContent = user.name;
      nameCell.style.padding = "6px";

      const emailCell = document.createElement("td");
      emailCell.textContent = user.email;
      emailCell.style.padding = "6px";

      row.appendChild(sttCell); // g·∫Øn √¥ stt td v√†o tr l√† √¥ s√¥ th·ª© t·ª±
      row.appendChild(nameCell);// g·∫Øn √¥ ch·ª©a t√™n d√πng td v√†o h√†ng
      row.appendChild(emailCell);// g·∫Øn √¥ ch·ª©a email v√†og h√†ng

      table.appendChild(row);// g·∫Øn h√†ng v·ª´a t·∫°o v√†o b·∫£ng
    });

    // G·∫Øn b·∫£ng v√†o DOM
    listContainer.appendChild(table);

    // G·ª≠i l·∫°i d·ªØ li·ªáu v·ª´a nh·∫≠n ƒë∆∞·ª£c b·∫±ng POST
    const postResponse = await fetch(
      "https://jsonplaceholder.typicode.com/posts",
      {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify(data),
      }
    );

    const postResult = await postResponse.json();
    console.log("üì§ K·∫øt qu·∫£ g·ª≠i POST:", postResult);
    alert("D·ªØ li·ªáu ƒë√£ ƒë∆∞·ª£c g·ª≠i th√†nh c√¥ng!");
  } catch (error) {
    console.error("‚ùå L·ªói:", error);
    alert("ƒê√£ x·∫£y ra l·ªói khi x·ª≠ l√Ω d·ªØ li·ªáu.");
  }
}
